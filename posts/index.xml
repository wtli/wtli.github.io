<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on wtlinux</title>
    <link>https://www.eee.wiki/posts/</link>
    <description>Recent content in Posts on wtlinux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>976199267@qq.com (wangtian)</managingEditor>
    <webMaster>976199267@qq.com (wangtian)</webMaster>
    <copyright>(c) 2018 wangtian.</copyright>
    <lastBuildDate>Thu, 19 Jul 2018 11:00:01 +0800</lastBuildDate>
    
	<atom:link href="https://www.eee.wiki/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>常见nginx故障排查</title>
      <link>https://www.eee.wiki/posts/%E5%B8%B8%E8%A7%81nginx%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Thu, 19 Jul 2018 11:00:01 +0800</pubDate>
      <author>976199267@qq.com (wangtian)</author>
      <guid>https://www.eee.wiki/posts/%E5%B8%B8%E8%A7%81nginx%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/</guid>
      <description> 401  权限不够，查看目录文档授权是否正确  404  没有改文件，查看目录路径是否正确  502  坏的网关，查看服务是否正常启动
 查看服务端本地是否通
 查看nginx到服务端是否通
 查看upstream模块是否配置正确
 使用阿里云slb的需要查看健康检查是否OK
  </description>
    </item>
    
    <item>
      <title>Python流程控制</title>
      <link>https://www.eee.wiki/posts/python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Thu, 19 Jul 2018 10:55:44 +0800</pubDate>
      <author>976199267@qq.com (wangtian)</author>
      <guid>https://www.eee.wiki/posts/python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid>
      <description>python流程控制条件  if语法
if expression: # 表达式： statement(s) # 代码块 elif expression: statement(s) else exdpression: statement(s)  分数判断
例如
  [root@wangtian day02]# cat 2.py #!/usr/bin/python score = int(raw_input(&amp;quot;Please input num: &amp;quot;)) if score &amp;gt;= 90: print &#39;A&#39; print &#39;very good&#39; elif score &amp;gt;= 80: print &#39;B&#39; print &#39;good&#39; elif score &amp;gt;= 70: print &#39;C&#39; print &#39;pass&#39; else: print &#39;game over&#39; print &#39;END&#39;   操作  效果
[root@wangtian day02]# python 2.</description>
    </item>
    
    <item>
      <title>Kafka常用命令</title>
      <link>https://www.eee.wiki/posts/kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 17 Jul 2018 16:59:56 +0800</pubDate>
      <author>976199267@qq.com (wangtian)</author>
      <guid>https://www.eee.wiki/posts/kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>增  #启动 nohup /usr/local/kafkabin/zookeeper-server-start.sh /usr/local/kafka/config/server.properties &amp;amp; #创建topic bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 5 --topic test #topic创建注意事项 --replication-factor:指定副本数量，最少为2，如果对持久化要求高，可以跟集群主机数量相同 --partitions:指定分区数量，一般大于broker数量(负载均衡)，且大于consumer数量（消费对等），一个partition只能被一个consumer消费 #发送消息 bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test #接收消息 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-geginning #添加配置 bin/kafka-configs.sh --zookeeper zk_host:port/chroot --entity-type topics --entity-name my_topic_name --alter --add-config x=y  查  #查看topic列表 bin/kafka-topics.sh --zookeeper localhost:2181 --list #查看topic详情 bin/kafka-topics.sh --zookeeper localhost:2181 --describe --topic test #查看消费者位置 bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group my-group bin/kafka-consumer-groups.sh --zookeeper localhost:2181 --describe --group my-group #查看消费者列表 bin/kafka-consumer-groups.</description>
    </item>
    
    <item>
      <title>2018年中总结</title>
      <link>https://www.eee.wiki/posts/2018%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 17 Jul 2018 14:59:49 +0800</pubDate>
      <author>976199267@qq.com (wangtian)</author>
      <guid>https://www.eee.wiki/posts/2018%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mongo常用命令</title>
      <link>https://www.eee.wiki/posts/mongo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 17 Jul 2018 14:59:14 +0800</pubDate>
      <author>976199267@qq.com (wangtian)</author>
      <guid>https://www.eee.wiki/posts/mongo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>新建  #连接数据库 mongo --host 127.0.0.1 --port 40018 #建立/切换数据库 use admin #创建集合： db.createCollection(&amp;quot;nginxlog&amp;quot;) #创建固定集合： Capped Collections db.createCollection(&amp;quot;cappedlogCollection&amp;quot;,{capped:true,size:10000,max:1000}) 判断是否为固定集合 db.cappedLogCollection.isCapped() #已存在集合转换为固定集合 db.runCommand({&amp;quot;convertToCapped&amp;quot;:&amp;quot;posts&amp;quot;,size:10000}) #登陆验证 #注意：admin创建账号之后，需要先切换到库的用户，进行认证。 db.auth(&amp;quot;userAdmin&amp;quot;,&amp;quot;userAdmin@123&amp;quot;) #索引 db.COL.ensureIndex({KEY:1}) # 在后台创建索引 db.values.ensureIndex({open: 1, close: 1},{background: true})  删除  #删除数据库 use haha db.dropDatabase() #删除集合 db.collection.drop() #删除指定集合，集合名site db.site.drop() #删除所有数据 db.COL.remove({}) #删除全文索引 db.poste.getIndexes() #删除文档 db.COL.remove()  修改 #修改密码 db.changeUserPassword(&#39;tank2&#39;,&#39;test&#39;) #插入文档 db.COLLECTION_NAME.insert(document) #更新文档 db.COL.update() db.COL.save()  查询 #查看数据库 show dbs #查看集合： show collections #查看集合数据： db.COLLECTION_NAME.find() #查看集合数据易读 db.</description>
    </item>
    
  </channel>
</rss>